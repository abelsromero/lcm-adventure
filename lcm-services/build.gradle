
ext {
    httpClientVersion = '4.3.2'
    cxfArtifacts = [
            'cxf-rt-frontend-jaxws',
            'cxf-rt-frontend-jaxrs',
            'cxf-rt-transports-http',
    ]
    springArtifacts = [
            'spring-beans',
            'spring-context',
            'spring-core',
            'spring-aop',
            'spring-web'
    ]
}

apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'groovy'

repositories {
    mavenCentral()
}


dependencies {

    compile project(':lcm-model')
    compile project(':lcm-backend')

    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "org.aspectj:aspectjrt:1.6.12"
    compile "org.aspectj:aspectjweaver:1.6.12"
    compile "org.apache.httpcomponents:httpclient:$httpClientVersion"
    compile "javax.ws.rs:javax.ws.rs-api:2.0"
    compile "org.codehaus.jackson:jackson-jaxrs:1.9.13"

    springArtifacts.each { artifact ->
        compile "org.springframework:$artifact:$springVersion"
    }

    cxfArtifacts.each { artifact ->
        compile "org.apache.cxf:$artifact:$cxfVersion"
    }

    runtime "org.slf4j:slf4j-log4j12:$project.slf4jVersion"
    runtime "log4j:log4j:1.2.16"
    runtime "cglib:cglib:2.2.2"

}

httpPort = 8062
stopPort = 9451
stopKey = 'foo'

// New configuration for CXF dependencies.
configurations { cxfTool }
ext {
// Artifacts for CXF dependency.
    cxfToolArtifacts = [
            'cxf-tools-wsdlto-frontend-jaxws',
            'cxf-tools-wsdlto-databinding-jaxb',
            'cxf-tools-common',
            'cxf-tools-wsdlto-core'
    ]
}

dependencies {
    cxfToolArtifacts.each { artifact ->
        cxfTool "org.apache.cxf:$artifact:$cxfVersion"
    }
}

task wsdl2java(type: JavaExec) {
    ext {
        outputDir = file("$buildDir/generated/cxf")
    }

    outputs.upToDateWhen { false }
    outputs.dir "$projectDir/outputDir"
    main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
    classpath = configurations.cxfTool
    args '-d', outputDir
    args "-client"
    args '-verbose'
    args '-validate'
    args "http://localhost:$httpPort/lcm-adventure/demo?wsdl"
    doLast {
        println "Java clients generation completed"
    }
}